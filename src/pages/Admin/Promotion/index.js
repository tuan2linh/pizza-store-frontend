import React, { useState, useEffect } from 'react';
import { Table, Button, Modal, Form, Input, Space, message } from 'antd';
import { DeleteOutlined, EditOutlined, PlusOutlined, MinusCircleOutlined } from '@ant-design/icons';
import { toast } from 'react-toastify';

// Mock data with new structure
const initialPromotions = [
  {
    name: 'FESTIVE DEAL MUA 2 T·∫∂NG 3',
    image: 'https://img.dominos.vn/promotion+m2t3+-+3%27.png',
    description: [
      'T·∫∑ng l√™n ƒë·∫øn 173.000VND v·ªõi 2 l·ª±a ch·ªçn:',
      '* FESTIVE DEAL 1: Mua 1 Pizza size M/L k√®m 1 th·ª©c u·ªëng s·∫Ω ƒë∆∞·ª£c t·∫∑ng 1 ph·∫ßn M·ª≤ √ù ƒê·∫™M X·ªêT/ C√ÅNH G√Ä 4PCS + 1 ph·∫ßn Tr√°ng mi·ªáng + 1 lon Coca-Cola Zero Sugar.',
      '* FESTIVE DEAL 2: Mua 1 Pizza size M/L k√®m 1 th·ª©c u·ªëng s·∫Ω ƒë∆∞·ª£c t·∫∑ng 1 ph·∫ßn G√Ä VI√äN + 1 ph·∫ßn Tr√°ng mi·ªáng + 1 lon Coca-Cola Zero Sugar.',
      '* √Åp d·ª•ng t·ª´ 1/12 ƒë·∫øn 31/12/2024 cho h√¨nh th·ª©c D√πng t·∫°i ch·ªó, Mua mang v·ªÅ ho·∫∑c Giao h√†ng t·∫≠n n∆°i.'
    ],
    startDate: '2023-11-01',
    endDate: '2023-11-30',
    targetAudience: 'Kh√°ch h√†ng th√¢n thi·∫øt',
    offers: 'Mua 1 t·∫∑ng 1',
    maxProducts: 50,
    combos: ['FESTIVE DEAL 1', 'FESTIVE DEAL 2']
  },
  {
    name: 'GI·∫¢M 70% CHO PIZZA TH·ª® 2',
    image: 'https://img.dominos.vn/Family-Combo.png',
    description: ['* Mua 1 Pizza size M/L k√®m th·ª©c u·ªëng l·ªõn b·∫•t k·ª≥ ho·∫∑c 2 thÔøΩÔøΩÔøΩc u·ªëng nh·ªè ƒë∆∞·ª£c gi·∫£m 70% cho Pizza th·ª© 2 (ti·∫øt ki·ªám t·ª´ 109.000VND) c√πng size c√≥ gi√° b·∫±ng ho·∫∑c th·∫•p h∆°n Pizza th·ª© nh·∫•t.',
      '* √Åp d·ª•ng cho Mua Mang V·ªÅ & Giao H√†ng T·∫≠n N∆°i t·∫•t c·∫£ c√°c ng√†y trong tu·∫ßn.'
    ],
    startDate: '2023-12-01',
    endDate: '2023-12-31',
    targetAudience: 'T·∫•t c·∫£ kh√°ch h√†ng',
    offers: 'Gi·∫£m gi√° 10%',
    maxProducts: 200,
    combos: ['PIZZA SIZE M + 1 N∆Ø·ªöC L·ªöN', 'PIZZA SIZE L + 1 N∆Ø·ªöC L·ªöN','PIZZA SIZE M + 2 N∆Ø·ªöC NH·ªé','PIZZA SIZE L + 2 N∆Ø·ªöC NH·ªé']
  },
  {
    name: '[SAME PRICE] PIZZA ƒê·ªíNG GI√Å 99.000VND',
    image: 'https://img.dominos.vn/web+sp99.png',
    description: [
      '* Pizza ƒë·ªìng gi√° 99.000VND (size M) ho·∫∑c 149.000VND (size L) khi mua t·ª´ 02 Pizza tr·ªü l√™n, √°p d·ª•ng cho Sausage Kid Mania, Cheesy Chicken Bacon, Veggie Mania, Teriyaki Chicken, Hawaiian, Cheese Mania ‚Äì Ti·∫øt ki·ªám ƒë·∫øn 45%.',
      '+ Th√™m 40.000VND/ Pizza ƒë·ªÉ n√¢ng c·∫•p l√™n d√≤ng Seafood Cravers, Traditional & Meat Lovers.',
      '+ Th√™m 60.000VND/ Pizza ƒë·ªÉ n√¢ng c·∫•p l√™n American Cheeseburger, Habanero Cheeseburger, Seafood Lime Pesto, Super Topping (tr·ª´ d√≤ng Super Topping c·ªßa American Cheeseburger, Habanero Cheeseburger Seafood Lime Pesto, ).',
      `* √Åp d·ª•ng cho D√πng t·∫°i chÔøΩÔøΩÔøΩ, Mua mang v·ªÅ ho·∫∑c Giao h√†ng t·∫≠n n∆°i t·∫°i c√°c c·ª≠a h√†ng Domino's ƒë∆∞·ª£c ch·ªâ ƒë·ªãnh.`
    ],
    startDate: '2023-10-01',
    endDate: '2023-10-31',
    targetAudience: 'Kh√°ch h√†ng m·ªõi',
    offers: 'Gi·∫£m gi√° 20%',
    maxProducts: 100,
    combos: ['PIZZA SIZE M', 'PIZZA SIZE L']
  },
  {
    name: '[FAMILY COMBO] VUI TI·ªÜC C·∫¢ NH√Ä CH·ªà T·ª™ 93.000VND/ NG∆Ø·ªúI',
    image: 'https://img.dominos.vn/web+sp99.png',
    description: [
      '* Combo 279.000VND (Gi√° g·ªëc: 357.000VND) d√†nh cho 2-3 ng∆∞·ªùi g·ªìm 1 Pizza size M b·∫•t k·ª≥ + 1 ph·∫ßn G√† Vi√™n Ph√¥ Mai ƒê√∫t L√≤ + 3 th·ª©c u·ªëng nh·ªè + 1 Voucher 2-t·∫∑ng-1 Kid Pizza Maker.',
      '* Combo 279.000VND (Gi√° g·ªëc: 425.000VND) d√†nh cho 2-3 ng∆∞·ªùi g·ªìm 1 Pizza size M b·∫•t k·ª≥ + 1 ph·∫ßn Khai V·ªã T·ªïng H·ª£p + 1 Chocochips + 3 th·ª©c u·ªëng nh·ªè + 1 Voucher 2-t·∫∑ng-1 Kid Pizza Maker.',
      '* Combo 399.000VND (Gi√° g·ªëc: 586.000VND) d√†nh cho 4-5 ng∆∞·ªùi g·ªìm 2 Pizza size M b·∫•t k·ª≥ + 1 ph·∫ßn G√† Vi√™n Ph√¥ Mai ƒê√∫t L√≤ + 1 ph·∫ßn B√°nh Cu·ªôn X·ªët S√¥-c√¥-la + 1 th·ª©c u·ªëng l·ªõn + 1 Voucher 2-t·∫∑ng-1 Kid Pizza Maker.',
    ],
    startDate: '2023-10-01',
    endDate: '2023-10-31',
    targetAudience: 'Kh√°ch h√†ng m·ªõi',
    offers: 'Gi·∫£m gi√° 20%',
    maxProducts: 100,
    combos: ['COMBO 279.000VND', 'COMBO 309.000VND','COMBO 399.000VND']
  }
];

const PromotionManagement = () => {
  const [promotions, setPromotions] = useState(initialPromotions);
  const [isModalVisible, setIsModalVisible] = useState(false);
  const [editingPromotion, setEditingPromotion] = useState(null);
  const [form] = Form.useForm();

  useEffect(() => {
    toast.info("üë®‚Äçüíª ƒêang ph√°t tri·ªÉn");
    }, []);

  const columns = [
    { 
      title: 'Name', 
      dataIndex: 'name', 
      key: 'name',
      width: '15%',
      ellipsis: true
    },
    {
      title: 'Descriptions',
      dataIndex: 'description',
      key: 'description',
      width: '40%',
      render: (description) => (
        <ul style={{ margin: 0, paddingLeft: 20 }}>
          {description?.map((desc, index) => (
            <li key={index} style={{ marginBottom: 4 }}>{desc}</li>
          ))}
        </ul>
      )
    },
    {
      title: 'Image',
      dataIndex: 'image',
      key: 'image',
      width: '15%',
      render: (image) => (
        <img src={image} alt="Promotion" style={{ width: 100, height: 'auto' }} />
      )
    },
    {
      title: 'Combos',
      dataIndex: 'combos',
      key: 'combos',
      width: '20%',
      render: (combos) => (
        <ul style={{ margin: 0, paddingLeft: 20 }}>
          {combos.map((combo, index) => (
            <li key={index}>{combo}</li>
          ))}
        </ul>
      )
    },
    {
      title: 'Actions',
      key: 'actions',
      width: '10%',
      fixed: 'right',
      render: (_, record) => (
        <Space size="small">
          <Button 
            icon={<EditOutlined />} 
            type="primary"
            ghost
          />
          <Button 
            icon={<DeleteOutlined />} 
            danger
          />
        </Space>
      ),
    },
  ];

  const handleAdd = () => {
    toast.info("üë®‚Äçüíª ƒêang ph√°t tri·ªÉn");
  };

  const handleEdit = (promotion) => {
    toast.info("üë®‚Äçüíª ƒêang ph√°t tri·ªÉn");
  };

  const handleDelete = (id) => {
    toast.info("üë®‚Äçüíª ƒêang ph√°t tri·ªÉn");
  };

  const handleModalOk = () => {
    form.validateFields()
      .then(values => {
        if (editingPromotion) {
            toast.info("üë®‚Äçüíª ƒêang ph√°t tri·ªÉn");
        } else {
            toast.info("üë®‚Äçüíª ƒêang ph√°t tri·ªÉn");
        }
        setIsModalVisible(false);
      });
  };

  return (
    <div style={{ padding: 24 }}>
      <div style={{ marginBottom: 16 }}>
        <Button 
          type="primary" 
          icon={<PlusOutlined />}
          onClick={handleAdd}
        >
          Add Promotion
        </Button>
      </div>

      <Table 
        columns={columns} 
        dataSource={promotions} 
        rowKey="id"
        scroll={{ x: 1200 }} 
        bordered
      />

      <Modal
        title={editingPromotion ? 'Edit Promotion' : 'Add Promotion'}
        visible={isModalVisible}
        onOk={handleModalOk}
        onCancel={() => setIsModalVisible(false)}
        width={800}
      >
        <Form form={form} layout="vertical">
          <Form.Item
            name="name"
            label="Promotion Name"
            rules={[{ required: true }]}
          >
            <Input />
          </Form.Item>

          <Form.Item label="Descriptions">
            <Form.List name="descriptions">
              {(fields, { add, remove }) => (
                <>
                  {fields.map((field, index) => (
                    <Space key={field.key} style={{ display: 'flex', marginBottom: 8 }}>
                      <Form.Item
                        {...field}
                        rules={[{ required: true }]}
                      >
                        <Input placeholder="Enter description" />
                      </Form.Item>
                      <MinusCircleOutlined onClick={() => remove(field.name)} />
                    </Space>
                  ))}
                  <Button type="dashed" onClick={() => add()} block icon={<PlusOutlined />}>
                    Add Description
                  </Button>
                </>
              )}
            </Form.List>
          </Form.Item>

          <Form.Item
            name="image"
            label="Promotion Image URL"
            rules={[
              { required: true, message: 'Please input the image URL!' },
              { type: 'url', message: 'Please enter a valid URL!' }
            ]}
          >
            <Input placeholder="Enter image URL" />
          </Form.Item>

          <Form.Item label="Combos">
            <Form.List name="combos">
              {(fields, { add, remove }) => (
                <>
                  {fields.map((field, index) => (
                    <Space key={field.key} style={{ display: 'flex', marginBottom: 8 }}>
                      <Form.Item
                        {...field}
                        rules={[{ required: true }]}
                      >
                        <Input placeholder="Enter combo name" />
                      </Form.Item>
                      <MinusCircleOutlined onClick={() => remove(field.name)} />
                    </Space>
                  ))}
                  <Button type="dashed" onClick={() => add()} block icon={<PlusOutlined />}>
                    Add Combo
                  </Button>
                </>
              )}
            </Form.List>
          </Form.Item>
        </Form>
      </Modal>
    </div>
  );
};

export default PromotionManagement;
